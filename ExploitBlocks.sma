/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <hamsandwich>
#include <fakemeta>
#include <engine>

#define PLUGIN "New Plug-In"
#define VERSION "1.0"
#define AUTHOR "author"
new bool:concing = false;
new airDuck[32];
new blockDet[32]
new oldWeapon[32]
new glpl[32]
new doubleDuck[32]

new chop_enabled;
new qdet_enabled;
new qfire_enabled;

public plugin_init()
{
	register_plugin("Exploit Block", "1.0", "mrsouz");
	
	chop_enabled = register_cvar("chopblock","0")
	qdet_enabled = register_cvar("qdetblock","0")
	qfire_enabled = register_cvar("qfireblock","0")
	
	register_clcmd("say !check", "checkcooldown2");
	register_clcmd("detpipe","block_det")
	register_clcmd("lastinv","block_detmsg")
	register_clcmd("_special","block_special")
	
	register_forward( FM_CmdStart, "CmdStart" )
	RegisterHam(Ham_Spawn, "tf_weapon_concussiongrenade", "OnSpawnGren", 1)
	//RegisterHam(Ham_Spawn, "tf_gl_grenade", "OnSpawnGL", 1)
	
}


public OnSpawnGren(iEnt){
	concing = true;
	if(concing){
		set_task_ex(0.1, "concingcooldown", 0, "", 0, .flags = SetTask_Once);
	}
}

/*public OnSpawnGL(iEnt){
	
	new owner_id = entity_get_edict2(iEnt, EV_ENT_owner);
	new name[32]
	get_user_name(owner_id, name, 31)
	client_print(0, print_chat, "%d", iEnt)
}*/


public CmdStart(const id, const uc_handle, seed)
{
	    if(!is_user_alive(id))
		return FMRES_IGNORED;
    	
    	    //client_print(0, print_chat, "chop blocked")
             static buttons
	    static oldbuttons
	    buttons = get_uc(uc_handle, UC_Buttons)
	    oldbuttons = pev(id, pev_oldbuttons);
	    if((buttons & IN_ATTACK) && (oldbuttons & IN_ATTACK)){
		new class = entity_get_int(id, EV_INT_playerclass);
		new team = get_user_team(id);
		if((class == 4) && (team == 2)){
			blockDet[id] = 1
		}
		 }
		if(!(buttons & IN_ATTACK) && (oldbuttons & IN_ATTACK)){
			new class = entity_get_int(id, EV_INT_playerclass);
			new team = get_user_team(id);
			if((class == 4) && (team == 2)){
				//glpl[id] = 1
				set_task_ex(0.2, "checkcooldown", id, "", 0, .flags = SetTask_Once);
				//client_print(0, print_chat, "blcoked")
			}
		}
		new class = entity_get_int(id, EV_INT_playerclass);
		new team = get_user_team(id);
		if((class == 4) && (team == 2)){
			new iWeapon = get_user_weapon(id);
			new szWeapon[32]
			get_weaponname(iWeapon, szWeapon, 31);
			if(!equal(szWeapon, oldWeapon)){
				glpl[id] = 1;
				//client_print(id, print_chat, "weapon switched..")
				
				//block_detmsg(id)
				set_task_ex(0.1, "checkcooldown", id, "", 0, .flags = SetTask_Once);
			}
		copy(oldWeapon, 31, szWeapon)
		}
	    if((buttons & IN_DUCK) && (oldbuttons & IN_DUCK)&&  !(get_entity_flags(id) & FL_ONGROUND)){
		airDuck[id] = true;
	    }
	    
	    if(!(buttons & IN_DUCK) && (oldbuttons & IN_DUCK)&&  (get_entity_flags(id) & FL_ONGROUND) && !concing && !airDuck[id])
	    {
	    	//client_print(id, print_chat, "Please be sure to not chop <3")
	         new Float:fvelocity[3]
	         pev(id, pev_velocity, fvelocity)
	         new Float:maxSpeed
	         pev(id, pev_maxspeed, maxSpeed)
	         new Float:speed = floatsqroot(floatpower(fvelocity[0],2.0) + floatpower(fvelocity[1],2.0))
	         new Float:percSpeed = speed / maxSpeed * 100
	         //client_print(0, print_chat, "%f", percSpeed);
	         //client_print(0, print_chat, "%f", value);
	    	if(get_pcvar_num(chop_enabled) == 1){
			if((percSpeed > 190)){
				//client_print(id, print_chat, "Please be sure to not chop <3")
				/*new string[256]
				new mapname[32] 
				get_mapname(mapname, 31);
				new name[32]
				get_user_name(id, name, 31)
				new ctime[64]
				get_time("%m/%d/%Y", ctime, 63)
				strcat(string, name, 255)
				strcat(string, " - ", 255)
				strcat(string, mapname, 255)
				strcat(string, " - ", 255)
				strcat(string, ctime, 255)
				write_file("choppers.txt", string, -1);*/
			
				//entity_set_int( id, EV_INT_oldbuttons, iOldButtons | IN_DUCK );
				//set_user_maxspeed(id, 2.0)//double speed
				new Float:x, Float:y
				x = fvelocity[0] / speed
				y = fvelocity[1] / speed
				fvelocity[0] = x * maxSpeed
				fvelocity[1] = y * maxSpeed
				set_pev(id, pev_velocity, fvelocity)
			}
		}
		else if(get_pcvar_num(chop_enabled) == 2){
			if((percSpeed > 190)){
				if(doubleDuck[id] == 0){
					doubleDuck[id] = 1
					set_task_ex(0.5, "dduckCD", id, "", 0, .flags = SetTask_Once);
				}
				else if (doubleDuck[id] == 1){
						new Float:x, Float:y
						x = fvelocity[0] / speed
						y = fvelocity[1] / speed
						fvelocity[0] = x * maxSpeed
						fvelocity[1] = y * maxSpeed
						set_pev(id, pev_velocity, fvelocity)
				}
			
			}
		}
		}
		if(!(buttons & IN_DUCK) && !(oldbuttons & IN_DUCK)){
			if(airDuck[id]){
				airDuck[id] = false;
			}
	}
	return FMRES_IGNORED;
}

public concingcooldown(id){
	//client_print(0, print_chat, "cool down applied")
	concing = false;
}

public checkcooldown2(id){
	client_print(0, print_chat, "%d", airDuck[id])
}

public checkcooldown(id){
	/*new id;
	for(new i = 0; i < 32; i++){
		if(blockDet[i] == 1){
			id = i;
			break;
		}
	}*/
	blockDet[id] = 0;
	glpl[id] = 0;
	//client_print(id, print_chat, "test")
}

public block_det(id){
	//client_print(id, print_chat, "%d", blockDet[id])
	if(blockDet[id] == 1 && (get_pcvar_num(qdet_enabled) == 1)){
		//client_print(id, print_chat, "Please dont quick det :)")
	return PLUGIN_HANDLED;
	return PLUGIN_CONTINUE;
	}
}

public block_detmsg(id){
	blockDet[id] = 1
	set_task_ex(0.2, "checkcooldown", id, "", 0, .flags = SetTask_Once);
}

public block_special(id){
	new class = entity_get_int(id, EV_INT_playerclass);
	if((class == 3) && (get_pcvar_num(qfire_enabled) == 1)){
		//client_print(id, print_chat, "test")
		return PLUGIN_HANDLED;
		return PLUGIN_CONTINUE;
	}
	if(class == 4){
		if(blockDet[id] == 1 && (get_pcvar_num(qdet_enabled) == 1)){
		//client_print(id, print_chat, "Please dont quick det :)")
		return PLUGIN_HANDLED;
		return PLUGIN_CONTINUE;
	}
	}
}

public dduckCD(id){
	doubleDuck[id] = 0
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang2057\\ f0\\ fs16 \n\\ par }
*/
